input TodoFilterInput {
  task: String
  completed: Boolean
}

input PaginationInput {
  skip: Int
  take: Int
}

type Todo {
  id: ID!
  task: String!
  completed: Boolean!
}

type PageInfo {
  totalPages: Int!
  currentPage: Int!
  totalResults: Int!
  resultsPerPage: Int!
}

type TodoListResult {
  todos: [Todo!]!
  pageInfo: PageInfo!
}

type User {
  id: ID!
  email: String!
  todos: [Todo!]!
}

type Query {
  todos(filter: TodoFilterInput, pagination: PaginationInput): TodoListResult!
  me: User
}

type Mutation {
  register(email: String!, password: String!): User!
  login(email: String!, password: String!): String!
  addTodo(task: String!): Todo!
  toggleTodoCompleted(id: ID!): Todo!
  removeTodo(id: ID!): Todo!
}
